README

<Assignment Description>
An individual assignment. A very SIMPLE programming project in
which I SIMPLY implement a Red-Black Tree, and include pretty printing
which returns a string with the values in the tree, in a pyramid
fashion, each value appearing along with its color to aid in 
this data structure's visualization.

<Team/Individual Information>
Daniel Gamboa

<Description of approach for your solution>
I knew the general implementations for insertion and deletion. 
I then built a skeleton of all the possible
methods I could create. lookUp was the easiest to
implement. insertion and removal were just an updated form of their BST
implementations. The hard part really came to the recursive fix methods
for both of these operations. Before hand, I compiled a complete list
of invariants, pre, and post conditions in order to help assert
and verify the RBT. I never really got to implement the toPrettyPrint.

I don't really know if I had a structured approach this time. The first things I did
was put together the methods I knew would be easy to implement:
-rotate left & right
-lookup
-min
-successor
The next thing that I did was get started on my add method. This was fairly straightforward
but I definitely had trouble making sure my fixup worked for it. This wasn't even my biggest issue.
In order to make checking if I had a proper rbt, I quickly put together a verification method that tested
3 different things:
1. double red link violation
2. binary tree violation
3. black-path violation
Remove was definitely the biggest pain. 


<Conclusions and lessons learned>
This project since we have a lot of cases to manage for both insertion
and deletion, there were many transforming states of the tree. Red black trees are really
amazing in the sense of how it figures out how to balance itself. I feel that by the time
I hit a certain point, it was too late. The groundwork I had laid for my entire project
was what made it difficult. I'm not sure what I could have done better. In the end
I feel really frustrated with what I have here. What is shown in this "final" version
is no where close to where I want it to be. Additionally, whats not shown is probably 1000 lines
of code that i constantly redid.